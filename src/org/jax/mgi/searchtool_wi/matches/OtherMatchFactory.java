package org.jax.mgi.searchtool_wi.matches;

// standard java classes
import java.util.*;
import java.io.IOException;

// lucene
import org.apache.lucene.search.Hit;

// QS shared classes
import org.jax.mgi.shr.searchtool.IndexConstants;

// MGI Shared Classes
import org.jax.mgi.shr.config.Configuration;
import org.jax.mgi.shr.timing.TimeStamper;

/**
* A OtherMatchFactory is responsible for OtherMatch object creation and
*  data initialization
*/
public class OtherMatchFactory extends AbstractMatchFactory
{

  //-------------//
  // Constructor //
  //-------------//

  /**
  * Constructs the factory, calling the parent class constructor with config
  */
  public OtherMatchFactory(Configuration c)
  {
    super(c);
  }

  //------------------------------------//
  // Over-ridden Parent Abstract Method
  //------------------------------------//

  /**
  * Generates and initializes a OtherMatch
  */
  public OtherMatch getMatch(Hit h)
    throws IOException
  {
    // match type generated by this factory
    OtherMatch otherMatch = new OtherMatch();

    // use parent class's implementation to fill basic information about match
    this.setHit(h);
    this.loadAbstractMatchInfo(otherMatch);

    // fill data specific to this match type
    otherMatch.setOrganism( hit.get(IndexConstants.COL_ORGANISM) );
    otherMatch.setAccKey( hit.get(IndexConstants.COL_ACC_KEY) );
    otherMatch.setPreferred( hit.get(IndexConstants.COL_PREFERRED));
    //otherMatch.setLogicalDb( hit.get(IndexConstants.COL_LOGICAL_DB));
    otherMatch.setProvider( hit.get(IndexConstants.COL_PROVIDER));
    otherMatch.setMatchedText( hit.get(IndexConstants.COL_RAW_DATA));
    otherMatch.setDataType(hit.get(IndexConstants.COL_DATA_TYPE));
    otherMatch.setLogicalDb("TEST");

    return otherMatch;

  }

}

